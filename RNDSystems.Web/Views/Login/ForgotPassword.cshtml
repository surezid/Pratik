@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Forgot Password</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-select.min.css" rel="stylesheet" />
    <link href="~/Content/fuelux.min.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/Site.css" rel="stylesheet" />
    <link href="~/Content/bootstrapValidator.min.css" rel="stylesheet" />

</head>
<body>


    <div class="bootbox modal fade in" tabindex="-1" role="dialog" style="display: block;">
        <div class="modal-dialog">
            <div class="modal-content">
                @*@using (Html.BeginForm("CheckSecurityQuestion", "Login", FormMethod.Post))
                {*@
                    <div class="modal-body">
                        <button type="button" class="bootbox-close-button close" data-dismiss="modal" aria-hidden="true" style="margin-top: -10px;">×</button><div class="bootbox-body">
                            <div class="container">

                                <div class="row">
                                    <div class="form-group">
                                        <label for="UserName" class="cols-sm-2 control-label">User Name</label>
                                        <div class="cols-sm-10">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-text-width" aria-hidden="true"></i></span>
                                                <input type="text" value="" id="UserName" name="UserName" class="form-control" placeholder="Enter User Name">
                                                <button data-bb-handler="CheckUserName" id="btnCheckUserName" type="button" class="btn btn-success btnCheckUserName" style="margin-left:5px"><i class="fa fa-check"></i> Check</button>
                                            </div>
                                            <div id="IsValidUser" style="display:none" class="form-group has-feedback has-error">
                                                <i class="form-control-feedback bv-no-label glyphicon glyphicon-remove" data-bv-icon-for="UserName" style=""></i>
                                                <small id="UserMessage" class="help-block" data-bv-validator="notEmpty" data-bv-for="UserName" data-bv-result="INVALID" style=""></small>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="row SecurityQuestion" style="display:none">
                                    <div class="form-group">
                                        <label for="UserAnswer" id="SecurityQuestion" class="cols-sm-2 control-label"></label>
                                        <div class="cols-sm-10">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-text-width" aria-hidden="true"></i></span>
                                                <input type="text" value="" id="UserAnswer" name="UserAnswer" class="form-control" placeholder="Answer">
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div><div class="modal-footer">
                        <button id="btnCancel" data-bb-handler="cancel" type="button" class="btn btn-default"><i class="fa fa-times"></i> Cancel</button>
                        <button id="Confirm" data-bb-handler="confirm" type="button" class="btn btn-primary" disabled="disabled"><i class="fa fa-check"></i> Confirm</button>
                    </div>

               @* }*@
            </div>
        </div>
    </div>
  
</body>
</html>

<script src="~/Scripts/jquery-3.1.1.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/bootbox.min.js"></script>
<script src="~/Scripts/fuelux.min.js"></script>
<script src="~/Scripts/bootstrap-select.min.js"></script>
<script src="~/Scripts/bootstrapValidator.min.js"></script>

<script src="~/Scripts/Utilities.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#btnCheckUserName").bind("click", function () {  
            $.ajax({
                type: 'post',
                url: GetRootDirectory() + '/login/LoadSecurity',
                data: { UserName: $("#UserName").val() },
                success: function (data) {
                    if (data.IsSuccess) {
                        $(".SecurityQuestion").show();
                        $("#IsValidUser").hide();
                        $("#SecurityQuestion").html(data.SecurityQuestion);
                        $("#Confirm").attr("disabled", false);
                        $("#btnCheckUserName").attr("disabled", true);
                        $("#UserName").attr("readonly", true);
                    }
                    else {               
                        $("#IsValidUser").show();
                        $(".SecurityQuestion").hide();
                        $("#UserMessage").html(data.Message);
                        $("#Confirm").attr("disabled", true);
                    }
                }
            })
        });
        $("#Confirm").bind("click", function () {
            $.ajax({
                type: 'post',
                url: GetRootDirectory() + '/login/CheckSecurityQuestion',
                data: { UserName: $("#UserName").val(), UserAnswer: $("#UserAnswer").val() },
                success: function (data) {
                    if (data.IsSuccess) {
                        alert( window.location = data.Url);
                        window.location = data.Url;
                    }
                    else {                      
                        $("#IsValidUser").show();
                        $("#UserMessage").html(data.Message);
                        $("#btnCheckUserName").attr("disabled", false);
                        $("#Confirm").attr("disabled", true);
                        $("#UserName").attr("readonly", false);
                        $("#SecurityQuestion").html("");                      
                        $(".SecurityQuestion").hide();
                        $("#UserAnswer").val("");
                       
                    }
                    
                }
            })
        });
        $("#btnCancel").bind("click", function () {
            location.href = GetRootDirectory() + '/login/index';
        });
    });
    //$('#LMSSecurityQuestionId').selectpicker();
    //$('#LMSSecurityQuestionId').selectpicker();
    //$(document).ready(function () {
    //    var div = $('#popup').html();

    //    $(".btnCheckUserName").bind("click", function () {
    //        alert("Poda dai");
    //    });
    //    dialog = bootbox.dialog({
    //        message: div,
    //        //size: 'large',
    //        buttons: {
    //            cancel: {
    //                label: '<i class="fa fa-times"></i> Cancel',
    //                callback: function (result) {
    //                    location.href = GetRootDirectory() + '/login/index';
    //                }
    //            },
    //            confirm: {
    //                label: '<i class="fa fa-check"></i> Confirm',
    //                callback: function (result) {
    //                    var form = dialog.find('#entityform');
    //                    form.bootstrapValidator({
    //                        message: 'This value is not valid',
    //                        feedbackIcons: {
    //                            valid: 'glyphicon glyphicon-ok',
    //                            invalid: 'glyphicon glyphicon-remove',
    //                            validating: 'glyphicon glyphicon-refresh'
    //                        },
    //                        fields: {
    //                            UserName: {
    //                                validators: {
    //                                    notEmpty: {
    //                                        message: 'User Name is required.'
    //                                    }
    //                                }
    //                            }
    //                        }
    //                    });
    //                    var validator = form.data('bootstrapValidator');
    //                    validator.validate();

    //                    if (validator.isValid()) {
    //                        debugger;
    //                        var UserName = dialog.find('#UserName').val();
    //                        var model = {
    //                            UserName: UserName,
    //                        };
    //                        $.ajax({
    //                            type: 'post',
    //                            url: GetRootDirectory() + '/login/LoadSecurity',
    //                            data: model
    //                        })
    //                        .done(function (data) {
    //                            if (data) {
    //                                dialog.modal('hide');
    //                                if (data) {
    //                                    debugger;
    //                                    location.href = '/Login/LoadSecurity'
    //                                    //location.href = '/WorkStudy/WorkSutdyList/';
    //                                    // LoadSecurityDiv(data, UserName);
    //                                }

    //                                else {
    //                                    bootbox.alert("User Name does not exists.");
    //                                    dialog.show();
    //                                }
    //                            }
    //                            else {
    //                                //dialog.modal('hide');
    //                                bootbox.alert(data.message);
    //                            }
    //                        })
    //                        .fail(function (x, y, x) {
    //                            alert("error");
    //                        });
    //                    }
    //                    else
    //                        return false;
    //                }
    //            }
    //        },
    //        onEscape: function () {
    //            this.modal('hide');
    //            location.href = GetRootDirectory() + '/login/index';
    //        }
    //    });

    //});

    //function LoadSecurityDiv(data, UserName) {
    //    var div = '<div class=container ><form id="entityform" method="post"><input type="hidden" name="UserName" id="UserName" value="" />' + data + '</form></div>';
    //    dialog = bootbox.dialog({
    //        message: div,
    //        //size: 'large',
    //        buttons: {
    //            cancel: {
    //                label: '<i class="fa fa-times"></i> Cancel',
    //                callback: function (result) {
    //                    location.href = GetRootDirectory() + '/login/index';
    //                }
    //            },
    //            confirm: {
    //                label: '<i class="fa fa-check"></i> Confirm',
    //                callback: function (result) {
    //                    var form = dialog.find('#entityform');
    //                    form.bootstrapValidator({
    //                        message: 'This value is not valid',
    //                        feedbackIcons: {
    //                            valid: 'glyphicon glyphicon-ok',
    //                            invalid: 'glyphicon glyphicon-remove',
    //                            validating: 'glyphicon glyphicon-refresh'
    //                        },
    //                        fields: {
    //                            SecurityAnswer: {
    //                                validators: {
    //                                    notEmpty: {
    //                                        message: 'Security Answer is required.'
    //                                    }
    //                                }
    //                            },
    //                            RNDSecurityQuestionId: {
    //                                validators: {
    //                                    callback: {
    //                                        message: 'Security Question is required.',
    //                                        callback: function (value, validator, $field) {
    //                                            /* Get the selected options */
    //                                            var options = validator.getFieldElements('RNDSecurityQuestionId').val();
    //                                            return (options !== '-1');
    //                                        }
    //                                    }
    //                                }
    //                            },
    //                        }
    //                    });
    //                    var validator = form.data('bootstrapValidator');
    //                    validator.validate();
    //                    debugger;
    //                    if (validator.isValid()) {
    //                        var UserName = dialog.find('#UserName').val();
    //                        var RNDSecurityQuestionId = dialog.find('#RNDSecurityQuestionId').val();
    //                        var SecurityAnswer = dialog.find('#SecurityAnswer').val();
    //                        var model = {
    //                            UserName: UserName,
    //                            RNDSecurityQuestionId: RNDSecurityQuestionId,
    //                            SecurityAnswer: SecurityAnswer,
    //                        };
    //                        $.ajax({
    //                            type: 'post',
    //                            url: GetRootDirectory() + '/login/ForgotPassword',
    //                            data: model
    //                        })
    //                        .done(function (data) {
    //                            if (data && data.isSuccess) {
    //                                dialog.modal('hide');
    //                                bootbox.alert("Your new password is : " + data.message, function () { location.href = GetRootDirectory() + '/login/index'; });
    //                            }
    //                            else {
    //                                bootbox.alert(data.message);
    //                                delay(function () {
    //                                    location.href = GetRootDirectory() + '/login/index';
    //                                }, 2000);
    //                            }
    //                        })
    //                        .fail(function (x, y, x) {
    //                            alert("error");
    //                        });
    //                    }
    //                    else
    //                        return false;
    //                }
    //            }
    //        },
    //        onEscape: function () {
    //            this.modal('hide');
    //            location.href = GetRootDirectory() + '/login/index';
    //        }
    //    });

    //    dialog.find('#RNDSecurityQuestionId').selectpicker({ width: '27%' });
    //    dialog.find('#UserName').val(UserName);
    //}

    var delay = (function () {
        var timer = 0;
        return function (callback, ms) {
            clearTimeout(timer);
            timer = setTimeout(callback, ms);
        };
    })();

</script>